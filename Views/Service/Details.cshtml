@using System.Globalization
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model FreelancePlatform.Models.Service
@inject Microsoft.AspNetCore.Identity.UserManager<IdentityUser> UserManager

@{
    ViewData["Title"] = "Детали услуги";
}

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success text-center">@TempData["SuccessMessage"]</div>
}
@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger text-center">@TempData["ErrorMessage"]</div>
}

<div class="container mt-5">
    <!-- Карточка услуги -->
    <div class="filters-card mx-auto mb-5" style="max-width: 900px;">
        <h2 class="filters-title mb-3">@Model.Title</h2>

        <!-- Средний рейтинг и количество отзывов -->
        <div class="star-rating mb-2" title="@($"{(Model.Reviews.Any() ? Model.Reviews.Average(r => r.Rating) : 0):F1} из 5")">
            <div class="back-stars">
                ★★★★★
                <div class="front-stars" style="width:@(Model.Reviews.Any() ? Model.Reviews.Average(r => r.Rating) / 5.0 * 100 : 0)%">
                    ★★★★★
                </div>
            </div>
            <span class="ms-2 text-muted">(@(Model.Reviews?.Count ?? 0) отзывов)</span>
        </div>
        
        <div class="text-muted mb-3">Создана: @Model.CreatedAt.ToLocalTime().ToString("dd.MM.yyyy HH:mm")</div>

        <p><strong>Описание:</strong> @Model.Description</p>
        <p><strong>Цена:</strong> <span class="badge bg-success">@Model.Price.ToString("C", new CultureInfo("ru-RU"))</span></p>
        <p><strong>Статус услуги:</strong>
            @switch (Model.Status)
            {
                case ServiceStatus.Available:
                    <span class="status-badge status-open">Открыта</span>
                    break;
                case ServiceStatus.Unavailable:
                    <span class="status-badge status-inprogress">Закрыта</span>
                    break;
                default:
                    <span class="status-badge">Неизвестно</span>
                    break;
            }
        </p>
        <p><strong>Фрилансер:</strong><a asp-controller="PublicProfile" asp-action="Public" asp-route-userId="@Model.FreelancerId">@Model.Freelancer?.Email</a></p>

        @if (User.Identity?.Name == Model.Freelancer?.UserName && Model.Status == ServiceStatus.Available)
        {
            <div class="mt-4">
                <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-warning me-2">
                    <svg class="meta-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                              d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z" />
                    </svg>
                    Редактировать
                </a>
                <form asp-action="Delete" asp-route-id="@Model.Id" method="post" class="d-inline me-2">
                    <button type="submit" class="btn btn-danger">
                        <svg class="meta-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                  d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6M9 4V3a1 1 0 011-1h4a1 1 0 011 1v1M4 7h16" />
                        </svg>
                        Удалить
                    </button>
                </form>
                <form asp-action="CancelService" asp-route-id="@Model.Id" method="post" class="d-inline">
                    <button type="submit" class="btn btn-outline-danger">
                        <svg class="meta-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                  d="M6 18L18 6M6 6l12 12" />
                        </svg>
                        Отменить
                    </button>
                </form>
            </div>
        }

        @if (User.Identity?.Name == Model.Freelancer?.UserName && Model.Status == ServiceStatus.Unavailable)
        {
            <form method="post" asp-controller="Service" asp-action="ResumeService" asp-route-id="@Model.Id" class="mt-3">
                <button type="submit" class="btn btn-outline-success">
                    <svg class="meta-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                              d="M9 17v-2a4 4 0 014-4h4" />
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                              d="M15 7l4 4-4 4" />
                    </svg>
                    Возобновить услугу
                </button>
            </form>
        }

        @{
            var userName = User.Identity?.Name;
            bool hasActiveOrder = Model.Orders?.Any(o =>
                o.Client?.UserName == userName &&
                (o.Status == OrderStatus.Pending || o.Status == OrderStatus.Accepted)
            ) ?? false;
        }

        @if (User.IsInRole("Client") && !hasActiveOrder && Model.Status == ServiceStatus.Available)
        {
            <a class="btn btn-primary mt-4" asp-controller="Order" asp-action="Create" asp-route-serviceId="@Model.Id">
                Заказать услугу
            </a>
        }
        else
        {
            @if (User.IsInRole("Client"))
            {
                <p class="text-muted">Вы уже заказали эту услугу.</p>
            }
        }
    </div>

    @if (User.Identity?.IsAuthenticated == true && User.Identity.Name == Model.Freelancer?.UserName)
    {
        <!-- Заголовок -->
        <div class="header">
            <h1>Заказы на услугу</h1>
        </div>

        @if (Model.Orders != null && Model.Orders.Any())
        {
            <div class="custom-table-container">
                <h2 class="filters-title text-center mb-4">Заказы на услугу</h2>

                <div class="table-responsive">
                    <table class="table custom-table table-hover align-middle">
                        <thead>
                            <tr>
                                <th>Клиент</th>
                                <th>Срок (дней)</th>
                                <th>Комментарий</th>
                                <th>Действия</th>
                                <th>Статус</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var order in Model.Orders)
                            {
                                <tr>
                                    <td>@order.Client?.UserName</td>
                                    <td>@order.DurationInDays</td>
                                    <td>@order.Comment</td>
                                    <td>
                                        <a asp-controller="Order" asp-action="Details" asp-route-id="@order.Id" class="btn btn-sm btn-outline-primary me-1">
                                            <svg class="meta-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                                      d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                                      d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z" />
                                            </svg>
                                            Посмотреть
                                        </a>
                                        @if (order.Status == OrderStatus.Pending)
                                        {
                                            <form method="post" asp-controller="Service" asp-action="AcceptOrder" asp-route-serviceId="@Model.Id" asp-route-orderId="@order.Id" class="d-inline">
                                                <button type="submit" class="btn btn-sm btn-success">
                                                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-check2" viewBox="0 0 16 16">
                                                        <path d="M13.854 3.646a.5.5 0 0 1 0 .708l-7.5 7.5a.5.5 0 0 1-.708 0l-3.5-3.5a.5.5 0 1 1 .708-.708L6 10.293l7.146-7.147a.5.5 0 0 1 .708 0z"/>
                                                    </svg>
                                                    Взять в работу
                                                </button>
                                            </form>
                                            <form method="post" asp-controller="Service" asp-action="RejectOrder" asp-route-orderId="@order.Id" class="d-inline ms-1">
                                                <button type="submit" class="btn btn-sm btn-outline-danger">
                                                    <svg class="meta-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                                              d="M6 18L18 6M6 6l12 12" />
                                                    </svg>
                                                    Отклонить
                                                </button>
                                            </form>
                                        }
                                    </td>
                                    <td>
                                        @switch (order.Status)
                                        {
                                            case OrderStatus.Accepted:
                                                <span class="badge bg-success">Одобрен</span>
                                                break;
                                            case OrderStatus.Rejected:
                                                <span class="badge bg-secondary">Отклонен</span>
                                                break;
                                            case OrderStatus.Completed:
                                                <span class="badge bg-primary">Выполнен</span>
                                                break;
                                            case OrderStatus.Paid:
                                                <span class="badge bg-info">Оплачен</span>
                                                break;
                                            default:
                                                <span class="badge bg-warning text-dark">Рассматривается</span>
                                                break;
                                        }
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        }

        else
        {
            <p class="text-muted">Заказов пока нет.</p>
        }
    }
    @if (User.IsInRole("Client") && Model.Status == ServiceStatus.Available)
    {
        var userId = UserManager.GetUserId(User);
        var existingReview = Model.Reviews?.FirstOrDefault(r => r.UserId == userId);
    <h3 class="mt-4">@((existingReview != null) ? "Редактировать отзыв" : "Оставить отзыв")</h3>

    <form asp-action="AddReview" asp-controller="Service" method="post">
        <input type="hidden" name="serviceId" value="@Model.Id" />

        <div class="mb-3">
            <label for="rating" class="form-label">Оценка</label>
            <select name="rating" class="form-select" required>
                <option value="5">★★★★★</option>
                <option value="4">★★★★☆</option>
                <option value="3">★★★☆☆</option>
                <option value="2">★★☆☆☆</option>
                <option value="1">★☆☆☆☆</option>
            </select>
        </div>

        <div class="input-group mb-3">
            <label for="content" class="form-label">Комментарий</label>
            <textarea name="content" class="form-input w-100" rows="3" style="resize: vertical;">@existingReview?.Comment</textarea>
        </div>

        <button type="submit" class="btn btn-primary">@((existingReview != null) ? "Обновить отзыв" : "Отправить")</button>
    </form>
    }

    <h3 class="mt-4">Отзывы</h3>

    <form method="get" asp-action="Details" asp-route-id="@Model.Id" class="mb-3">
        <div class="d-flex gap-2">
            @for (int i = 5; i >= 1; i--)
            {
            <div class="form-check">
                <input class="form-check-input"
                       type="checkbox"
                       name="ratings"
                       value="@i"
                       id="rating-@i"
                       @(ViewBag.SelectedRatings != null && ((List<int>)ViewBag.SelectedRatings).Contains(i) ? "checked" : "") />
                <label class="form-check-label" for="rating-@i">
                    @i ★
                </label>
            </div>
            }
            <button type="submit" class="btn btn-primary">Фильтровать</button>
        </div>
    </form>


    @if (Model.Reviews != null && Model.Reviews.Any())
    {
    <div class="list-group">
        @foreach (var review in Model.Reviews)
        {
        <div class="project-card">
            <strong>@review.UserId</strong> —
            @for (int i = 0; i < review.Rating; i++) { <span>⭐</span> }
            <p>@review.Comment</p>
            <small class="text-muted">@review.CreatedAt.ToLocalTime()</small>
        </div>
        }
    </div>
    }
    else
    {
    <p>Пока нет отзывов.</p>
    }
</div>
