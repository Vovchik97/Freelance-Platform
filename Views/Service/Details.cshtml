@using System.Globalization
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model FreelancePlatform.Models.Service
@{
    ViewData["Title"] = "Детали услуги";
}

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success text-center">@TempData["SuccessMessage"]</div>
}
@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger text-center">@TempData["ErrorMessage"]</div>
}

<div class="container mt-5">
    <!-- Карточка услуги -->
    <div class="filters-card mx-auto mb-5" style="max-width: 900px;">
        <h2 class="filters-title mb-3">@Model.Title</h2>
        <div class="text-muted mb-3">Создана: @Model.CreatedAt.ToLocalTime().ToString("dd.MM.yyyy HH:mm")</div>

        <p><strong>Описание:</strong> @Model.Description</p>
        <p><strong>Цена:</strong> <span class="badge bg-success">@Model.Price.ToString("C", new CultureInfo("ru-RU"))</span></p>
        <p><strong>Статус услуги:</strong>
            @switch (Model.Status)
            {
                case ServiceStatus.Available:
                    <span class="status-badge status-open">Открыта</span>
                    break;
                case ServiceStatus.Unavailable:
                    <span class="status-badge status-inprogress">Закрыта</span>
                    break;
                default:
                    <span class="status-badge">Неизвестно</span>
                    break;
            }
        </p>
        <p><strong>Фрилансер:</strong><a asp-controller="PublicProfile" asp-action="Public" asp-route-userId="@Model.FreelancerId">@Model.Freelancer?.Email</a></p>

        @if (User.Identity?.Name == Model.Freelancer?.UserName && Model.Status == ServiceStatus.Available)
        {
            <div class="mt-4">
                <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-warning me-2">Редактировать</a>
                <form asp-action="Delete" asp-route-id="@Model.Id" method="post" class="d-inline me-2">
                    <button type="submit" class="btn btn-danger">Удалить</button>
                </form>
                <form asp-action="CancelService" asp-route-id="@Model.Id" method="post" class="d-inline">
                    <button type="submit" class="btn btn-outline-danger">Отменить</button>
                </form>
            </div>
        }

        @if (User.Identity?.Name == Model.Freelancer?.UserName && Model.Status == ServiceStatus.Unavailable)
        {
            <form method="post" asp-controller="Service" asp-action="ResumeService" asp-route-id="@Model.Id" class="mt-3">
                <button type="submit" class="btn btn-outline-success">Возобновить услугу</button>
            </form>
        }

        @{
            var userName = User.Identity?.Name;
            bool hasActiveOrder = Model.Orders?.Any(o =>
                o.Client?.UserName == userName &&
                (o.Status == OrderStatus.Pending || o.Status == OrderStatus.Accepted)
            ) ?? false;
        }

        @if (User.IsInRole("Client") && !hasActiveOrder && Model.Status == ServiceStatus.Available)
        {
            <a class="btn btn-primary mt-4" asp-controller="Order" asp-action="Create" asp-route-serviceId="@Model.Id">
                Заказать услугу
            </a>
        }
        else
        {
            @if (User.IsInRole("Client"))
            {
                <p class="text-muted">Вы уже заказали эту услугу.</p>
            }
        }
    </div>

    @if (User.Identity?.IsAuthenticated == true && User.Identity.Name == Model.Freelancer?.UserName)
    {
        <!-- Заголовок -->
        <div class="header">
            <h1>Заказы на услугу</h1>
        </div>

        @if (Model.Orders != null && Model.Orders.Any())
        {
            <div class="custom-table-container">
                <h2 class="filters-title text-center mb-4">Заказы на услугу</h2>

                <div class="table-responsive">
                    <table class="table custom-table table-hover align-middle">
                        <thead>
                            <tr>
                                <th>Клиент</th>
                                <th>Срок (дней)</th>
                                <th>Комментарий</th>
                                <th>Действия</th>
                                <th>Статус</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var order in Model.Orders)
                            {
                                <tr>
                                    <td>@order.Client?.UserName</td>
                                    <td>@order.DurationInDays</td>
                                    <td>@order.Comment</td>
                                    <td>
                                        <a asp-controller="Order" asp-action="Details" asp-route-id="@order.Id" class="btn btn-sm btn-outline-primary me-1">
                                            Посмотреть
                                        </a>
                                        @if (order.Status == OrderStatus.Pending)
                                        {
                                            <form method="post" asp-controller="Service" asp-action="AcceptOrder" asp-route-serviceId="@Model.Id" asp-route-orderId="@order.Id" class="d-inline">
                                                <button type="submit" class="btn btn-sm btn-success">Взять в работу</button>
                                            </form>
                                            <form method="post" asp-controller="Service" asp-action="RejectOrder" asp-route-orderId="@order.Id" class="d-inline ms-1">
                                                <button type="submit" class="btn btn-sm btn-outline-danger">Отклонить</button>
                                            </form>
                                        }
                                    </td>
                                    <td>
                                        @switch (order.Status)
                                        {
                                            case OrderStatus.Accepted:
                                                <span class="badge bg-success">Одобрен</span>
                                                break;
                                            case OrderStatus.Rejected:
                                                <span class="badge bg-secondary">Отклонен</span>
                                                break;
                                            case OrderStatus.Completed:
                                                <span class="badge bg-primary">Выполнен</span>
                                                break;
                                            default:
                                                <span class="badge bg-warning text-dark">Рассматривается</span>
                                                break;
                                        }
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        }

        else
        {
            <p class="text-muted">Заказов пока нет.</p>
        }
    }
</div>
