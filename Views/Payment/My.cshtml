@model IEnumerable<FreelancePlatform.Models.Payment>
@{
ViewData["Title"] = "Мои платежи";
}

<div class="container mt-5">
    <div class="header">
        <h1>Мои платежи</h1>
    </div>

    @if (Model.Any())
    {
        <div class="custom-table-container">
            <table class="custom-table">
                <thead>
                <tr>
                    <th>Заказ</th>
                    <th>Услуга</th>
                    <th>Сумма</th>
                    <th>Статус</th>
                    <th>Создан</th>
                    <th>Обновлён</th>
                    <th>Действия</th>
                </tr>
                </thead>
                <tbody>
                @foreach (var p in Model)
                {
                    <tr>
                        <td>@p.OrderId</td>
                        <td>@p.Order?.Service?.Title</td>
                        <td>@((p.AmountMinor/100.0M).ToString("C", new System.Globalization.CultureInfo("ru-RU")))</td>
                        <td>
                            <span class="status-badge @GetStatusClass(p.Status.ToString())">
                                @GetStatusText(p.Status.ToString())
                            </span>
                        </td>
                        <td>@p.CreatedAt.ToLocalTime()</td>
                        <td>@p.UpdatedAt.ToLocalTime()</td>
                        <td>
                            <div class="d-flex flex-column gap-1">
                                <a asp-controller="Order" asp-action="Details" asp-route-id="@p.Order?.Id" class="btn btn-sm btn-outline-primary">Детали</a>
                                <a asp-controller="Service" asp-action="Details" asp-route-id="@p.Order?.Service?.Id" class="btn btn-sm btn-outline-secondary">Услуга</a>
                            </div>
                        </td>
                    </tr>
                }
                </tbody>
            </table>
        </div>
    }
    else
    {
        <p class="text-muted">Платежей пока нет.</p>
    }
</div>

@functions {
    private string GetStatusClass(string status)
    {
        return status switch
        {
            "Pending" => "status-pending",
            "Succeeded" => "status-accepted",
            "Canceled" => "status-rejected",
            "Failed" => "status-completed",
            _ => "status-pending"
        };
    }

    private string GetStatusText(string status)
    {
        return status switch
        {
            "Pending" => "Рассматривается",
            "Succeeded" => "Успешно",
            "Canceled" => "Отклонено",
            "Failed" => "Неудачно",
            _ => "Неизвестно"
        };
    }
}